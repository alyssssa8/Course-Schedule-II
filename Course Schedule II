class Solution {
private: 
        vector<vector<int>> newValueStore;
        vector<int>ans;
        vector<int>valueStatus;
public:
    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
         newValueStore = vector<vector<int>>(numCourses);
         valueStatus = vector<int>(numCourses);  
        for (int i = 0; i < prerequisites.size(); i++){
            newValueStore[prerequisites[i][1]].push_back(prerequisites[i][0]);
        }
        
        for (int i = 0; i <numCourses; i++){
            if (dfs(i)){
                return {};
            }
        }
        reverse(ans.begin(),ans.end());
        return ans;
    }
    bool dfs(int i){
        if (valueStatus[i] == 1){
            return true;
        }
        if (valueStatus[i] == 2){
            return false;
        }
        else{
            valueStatus[i] = 1;
            for (int j = 0; j <newValueStore[i].size(); j++){
                if (dfs(newValueStore[i][j]) == true){
                    return true;
                }
            }
            valueStatus[i] = 2;
            ans.push_back(i);
            return false;
        }
    }
    
};
